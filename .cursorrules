# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.
## Scratchpad

### 1. Project Setup and Configuration [ ]

- [X] Initialize Next.js 15 project with TypeScript
- [X] Set up project structure and folders
- [X] Configure ESLint and Prettier
- [ ] Install and configure dependencies:
  - [X] Shadcn UI components:
    - [X] Install shadcn CLI
    - [X] Set up tailwind.config.js
    - [X] Configure components.json
    - [X] Add initial components (Button, Card, Input, Form, Dialog, DropdownMenu, Sheet, Avatar, Badge, Select, Separator, Skeleton, Table, Tabs, Sonner)
  - [X] Lucide icons:
    - [X] Install lucide-react package
    - [X] Set up icon imports (automatically handled by Next.js)
  - [X] Zod for validation:
    - [X] Install zod package (installed with shadcn)
    - [X] Create schema directory
    - [X] Set up base validation schemas
  - [X] Zustand for state management:
    - [X] Install zustand package
    - [X] Create store directory
    - [X] Set up initial stores (cart, auth)
  - [X] Recharts for analytics:
    - [X] Install recharts package
    - [X] Create chart components directory
    - [X] Add base chart components (RevenueChart, OrdersChart, ProductPerformanceChart)
  - [X] Resend for emails:
    - [X] Install resend package
    - [X] Set up email templates
    - [X] Configure API keys (needs to be added to .env)
  - [X] Uploadthing for file uploads:
    - [X] Install uploadthing packages
    - [X] Configure API routes
    - [X] Set up upload components (UploadButton, UploadDropzone)
  - [X] Prisma ORM:
    - [X] Install prisma packages
    - [X] Initialize prisma
    - [X] Set up database schema
    - [X] Generate Prisma client
  - [X] PostgreSQL database:
    - Set up local PostgreSQL
    - Create database
    - Configure connection string
  - [X] NextAuth.js beta for authentication:
    - Install next-auth beta
    - Configure auth options
    - Set up providers
  - [X] Stripe for payments:
    - Install stripe packages
    - Set up API keys
    - Create payment utilities

### 2. Database and Authentication [ ]

- [X] Set up PostgreSQL database
- [X] Configure Prisma schema:
  - User model
  - Product model
  - Category model
  - Order model
  - Review model
  - Cart model
- [ ] Implement NextAuth.js authentication:
  - [X] Set up auth configuration:
    - [X] Create auth options file
    - [X] Configure Prisma adapter
    - [X] Set up JWT configuration
  - [X] Implement authentication providers:
    - [X] Email/Password provider
    - [X] Google OAuth provider
    - [X] GitHub OAuth provider
  - [X] Create authentication utilities:
    - [X] Sign in/out functions
    - [X] Session management
    - [X] Protected route middleware
  - [X] Set up authentication UI:
    - [X] Sign in page
    - [X] Sign up page
    - [X] Password reset flow
    - [X] Email verification

### 3. Core Features - Customer Side [ ]

- [ ] Home Layout:
  - Create `(home)` folder in `app` directory
  - Header with logo, search bar, and navigation
  - Footer with links and social media
- [ ] Homepage:
  - banner carousel
  - latest products
- [ ] Products Catalog:
  - Sidebar with categories and filters
  - Search results
  - Product grid
  - Pagination
- [ ] Product pages:
  - Create product detail page layout
  - Implement image gallery with thumbnails
  - Add product information section:
    - Title, price, description
    - Stock status
    - Add to cart button
  - Reviews and ratings section:
    - Display existing reviews
    - Add review form for authenticated users
    - Star rating component
  - Related products section:
    - Show products from same category
    - Product card carousel
- [ ] Shopping cart:
  - Add/remove items
  - Update quantities
  - Cart persistence
- [ ] Checkout process:
  - Shipping information
  - Payment integration (Stripe)
  - Order confirmation
- [ ] User dashboard:
  - Order history
  - Profile management
  - Saved addresses
  - Wishlist

### 4. Admin Dashboard [ ]

- [ ] Admin authentication and authorization
- [  ] Dashboard overview:
  - [ ] Layout and Structure:
    - [ ] Create admin dashboard layout with sidebar navigation
    - [ ] Implement responsive grid for dashboard widgets
    - [ ] Add loading states and error boundaries
  - [ ] Key Metrics Cards:
    - [ ] Total revenue widget with real data
    - [ ] Total orders widget with real data
    - [ ] Total customers widget with real data
    - [ ] Average order value widget with real data
  - [ ] Sales Analytics:
    - [ ] Revenue Chart:
      - [ ] Implement line chart using Recharts
      - [ ] Add daily/weekly/monthly/yearly filters
      - [ ] Show revenue trends over time
      - [ ] Add tooltip with detailed information
    - [ ] Order Statistics:
      - [ ] Bar chart for order volume
      - [ ] Order status distribution
      - [ ] Peak ordering times
  - [ ] Recent Orders Table:
    - [ ] Implement data table with columns:
      - [ ] Order ID
      - [ ] Customer name
      - [ ] Order total
      - [ ] Status
      - [ ] Date
    - [ ] Add sorting and filtering
    - [ ] Quick actions (view, process, update status)
  - [ ] Low Stock Alerts:
    - Products with stock below threshold
    - Quick restock actions
    - Stock level indicators
  - [ ] Top Products:
    - Best-selling products list
    - Revenue by product
    - Stock status
  - [ ] Customer Insights:
    - New vs returning customers
    - Customer acquisition chart
    - Top customers by revenue
  - [ ] Real-time Updates:
    - Implement WebSocket connection
    - Live order notifications
    - Stock level updates
  - [ ] Export and Reports:
    - CSV/PDF export functionality
    - Custom date range selection
    - Report generation
- [ ] Product management:
  - CRUD operations
  - Bulk actions
  - Image upload (Uploadthing)
- [ ] Order management:
  - Order processing
  - Status updates
  - Refund handling
- [ ] User management:
  - Customer list
  - Admin privileges
  - User actions

### 5. Advanced Features [ ]

- [ ] Real-time notifications
- [ ] Email system (Resend):
  - Order confirmations
  - Shipping updates
  - Password reset
- [ ] Search optimization
- [ ] Performance optimization:
  - Image optimization
  - Caching strategies
  - API optimization
- [ ] Analytics and reporting

### 6. Testing and Deployment [ ]

- [ ] Unit testing
- [ ] Integration testing
- [ ] E2E testing
- [ ] Security audit
- [ ] Production deployment:
  - Environment setup
  - CI/CD pipeline
  - Monitoring
  - Backup strategy

### 7. Documentation [ ]

- [ ] API documentation
- [ ] User guide
- [ ] Admin documentation
- [ ] Deployment guide